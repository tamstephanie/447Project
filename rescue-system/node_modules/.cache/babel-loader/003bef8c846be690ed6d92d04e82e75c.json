{"remainingRequest":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/babel-loader/lib/index.js!/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/eslint-loader/index.js??ref--13-0!/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/src/helpers/router.js","dependencies":[{"path":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/src/helpers/router.js","mtime":1544621781827},{"path":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/cache-loader/dist/cjs.js","mtime":1543684926695},{"path":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/babel-loader/lib/index.js","mtime":1543685022971},{"path":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/eslint-loader/index.js","mtime":1543685038734}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport Router from 'vue-router'; // Import local files\n\nimport LoginPage from '../login/LoginPage';\nimport MainView from '../main/MainView';\nVue.use(Router); // Create paths for each page\n\nexport var router = new Router({\n  mode: 'history',\n  routes: [{\n    path: '/login',\n    name: 'Login',\n    component: LoginPage\n  }, {\n    path: '/main',\n    name: 'Main',\n    component: MainView\n  }, // If path doesn't exist, redirect to main page after logging in?\n  {\n    path: '*',\n    redirect: '/login'\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  // Redirect to login page if not logged in and trying to access a restricted page\n  var publicPage = ['/login', '/main'];\n  var authRequired = !publicPage.includes(to.path);\n  var loggedIn = localStorage.getItem('user');\n\n  if (authRequired && !loggedIn) {\n    return next('/login');\n  }\n\n  next();\n});",{"version":3,"sources":["/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/src/helpers/router.js"],"names":["Vue","Router","LoginPage","MainView","use","router","mode","routes","path","name","component","redirect","beforeEach","to","from","next","publicPage","authRequired","includes","loggedIn","localStorage","getItem"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEAH,GAAG,CAACI,GAAJ,CAAQH,MAAR,E,CAGA;;AACA,OAAO,IAAMI,MAAM,GAAG,IAAIJ,MAAJ,CAAW;AAC/BK,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,MAAM,EAAE,CACN;AAAEC,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,IAAI,EAAE,OAAxB;AAAiCC,IAAAA,SAAS,EAAER;AAA5C,GADM,EAEN;AAAEM,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,IAAI,EAAE,MAAvB;AAA+BC,IAAAA,SAAS,EAAEP;AAA1C,GAFM,EAIN;AACA;AAAEK,IAAAA,IAAI,EAAE,GAAR;AAAaG,IAAAA,QAAQ,EAAE;AAAvB,GALM;AAFuB,CAAX,CAAf;AAWPN,MAAM,CAACO,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC;AACA,MAAMC,UAAU,GAAG,CAAC,QAAD,EAAW,OAAX,CAAnB;AACA,MAAMC,YAAY,GAAG,CAACD,UAAU,CAACE,QAAX,CAAoBL,EAAE,CAACL,IAAvB,CAAtB;AACA,MAAMW,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB;;AAEA,MAAIJ,YAAY,IAAI,CAACE,QAArB,EAA+B;AAC7B,WAAOJ,IAAI,CAAC,QAAD,CAAX;AACD;;AAEDA,EAAAA,IAAI;AACL,CAXD","sourcesContent":["import Vue from 'vue';\r\nimport Router from 'vue-router';\r\n\r\n// Import local files\r\nimport LoginPage from '../login/LoginPage'\r\nimport MainView from '../main/MainView'\r\n\r\nVue.use(Router);\r\n\r\n\r\n// Create paths for each page\r\nexport const router = new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    { path: '/login', name: 'Login', component: LoginPage },\r\n    { path: '/main', name: 'Main', component: MainView },\r\n    \r\n    // If path doesn't exist, redirect to main page after logging in?\r\n    { path: '*', redirect: '/login' }\r\n  ]\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // Redirect to login page if not logged in and trying to access a restricted page\r\n  const publicPage = ['/login', '/main'];\r\n  const authRequired = !publicPage.includes(to.path);\r\n  const loggedIn = localStorage.getItem('user');\r\n\r\n  if (authRequired && !loggedIn) {\r\n    return next('/login');\r\n  }\r\n\r\n  next();\r\n})"]}]}