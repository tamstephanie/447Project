{"remainingRequest":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/babel-loader/lib/index.js!/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/eslint-loader/index.js??ref--13-0!/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/src/helpers/router.mainview.js","dependencies":[{"path":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/src/helpers/router.mainview.js","mtime":1544571263983},{"path":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/cache-loader/dist/cjs.js","mtime":1543684926695},{"path":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/babel-loader/lib/index.js","mtime":1543685022971},{"path":"/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/node_modules/eslint-loader/index.js","mtime":1543685038734}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport Vue from 'vue';\nimport Router from 'vue-router'; // Import local files\n\nimport CreateEvent from '../main/events/CreateEvent';\nimport EventsTable from '../main/events/EventsTable';\nimport MissionsTable from '../main/missions/MissionsTable';\nVue.use(Router); // Create paths for each page\n\nexport var router_main = new Router({\n  mode: 'history',\n  routes: [{\n    path: '/create/event',\n    name: 'Create Events',\n    component: CreateEvent,\n    adminOnly: true\n  }, {\n    path: '/main/events',\n    name: 'Events',\n    component: EventsTable\n  }, // { path: '/eventsTable/event', component: Event },\n  {\n    path: '/main/missions',\n    name: 'Missions',\n    component: MissionsTable\n  }]\n});\nrouter_main.beforeEach(function (to, from, next) {\n  // Redirect to login page if not logged in and trying to access a restricted page\n  var publicPage = ['/main/events'];\n  var authRequired = !publicPage.includes(to.path);\n\n  if (!authRequired) {\n    return next('/login');\n  }\n\n  next();\n});",{"version":3,"sources":["/mnt/c/Users/Flower/Documents/Steph/447Project/rescue-system/src/helpers/router.mainview.js"],"names":["Vue","Router","CreateEvent","EventsTable","MissionsTable","use","router_main","mode","routes","path","name","component","adminOnly","beforeEach","to","from","next","publicPage","authRequired","includes"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEAJ,GAAG,CAACK,GAAJ,CAAQJ,MAAR,E,CAEA;;AACA,OAAO,IAAMK,WAAW,GAAG,IAAIL,MAAJ,CAAW;AACpCM,EAAAA,IAAI,EAAE,SAD8B;AAEpCC,EAAAA,MAAM,EAAE,CACN;AAAEC,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,IAAI,EAAE,eAA/B;AAAgDC,IAAAA,SAAS,EAAET,WAA3D;AAAwEU,IAAAA,SAAS,EAAE;AAAnF,GADM,EAEN;AAAEH,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,IAAI,EAAE,QAA9B;AAAwCC,IAAAA,SAAS,EAAER;AAAnD,GAFM,EAGN;AACA;AAAEM,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,IAAI,EAAE,UAAhC;AAA4CC,IAAAA,SAAS,EAAEP;AAAvD,GAJM;AAF4B,CAAX,CAApB;AAYPE,WAAW,CAACO,UAAZ,CAAuB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACzC;AACA,MAAMC,UAAU,GAAG,CAAC,cAAD,CAAnB;AACA,MAAMC,YAAY,GAAG,CAACD,UAAU,CAACE,QAAX,CAAoBL,EAAE,CAACL,IAAvB,CAAtB;;AAEA,MAAI,CAACS,YAAL,EAAmB;AACjB,WAAOF,IAAI,CAAC,QAAD,CAAX;AACD;;AAEDA,EAAAA,IAAI;AACL,CAVD","sourcesContent":["import Vue from 'vue';\r\nimport Router from 'vue-router';\r\n\r\n// Import local files\r\nimport CreateEvent from '../main/events/CreateEvent'\r\nimport EventsTable from '../main/events/EventsTable'\r\nimport MissionsTable from '../main/missions/MissionsTable'\r\n\r\nVue.use(Router);\r\n\r\n// Create paths for each page\r\nexport const router_main = new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    { path: '/create/event', name: 'Create Events', component: CreateEvent, adminOnly: true },\r\n    { path: '/main/events', name: 'Events', component: EventsTable },\r\n    // { path: '/eventsTable/event', component: Event },\r\n    { path: '/main/missions', name: 'Missions', component: MissionsTable },\r\n    // { path: '/map', component: MapView },\r\n  ]\r\n});\r\n\r\n\r\nrouter_main.beforeEach((to, from, next) => {\r\n  // Redirect to login page if not logged in and trying to access a restricted page\r\n  const publicPage = ['/main/events'];\r\n  const authRequired = !publicPage.includes(to.path);\r\n\r\n  if (!authRequired) {\r\n    return next('/login');\r\n  }\r\n\r\n  next();\r\n})\r\n"]}]}